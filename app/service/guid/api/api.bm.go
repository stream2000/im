// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: api.proto

package api

import (
	"context"

	bm "github.com/bilibili/kratos/pkg/net/http/blademaster"
	"github.com/bilibili/kratos/pkg/net/http/blademaster/binding"
)
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathGuidPing = "/guid.service.v1.Guid/Ping"
var PathGuidGetGuid = "/guid.service.v1.Guid/GetGuid"

// GuidBMServer is the server API for Guid service.
type GuidBMServer interface {
	Ping(ctx context.Context, req *google_protobuf1.Empty) (resp *google_protobuf1.Empty, err error)

	GetGuid(ctx context.Context, req *GetGuidReq) (resp *GetGuidResp, err error)
}

var GuidSvc GuidBMServer

func guidPing(c *bm.Context) {
	p := new(google_protobuf1.Empty)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := GuidSvc.Ping(c, p)
	c.JSON(resp, err)
}

func guidGetGuid(c *bm.Context) {
	p := new(GetGuidReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := GuidSvc.GetGuid(c, p)
	c.JSON(resp, err)
}

// RegisterGuidBMServer Register the blademaster route
func RegisterGuidBMServer(e *bm.Engine, server GuidBMServer, midMap map[string]bm.HandlerFunc) {
	GuidSvc = server
	e.GET("/guid.service.v1.Guid/Ping", guidPing)
	e.GET("/guid.service.v1.Guid/GetGuid", guidGetGuid)
}
