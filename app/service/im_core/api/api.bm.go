// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: api.proto

package api

import (
	"context"

	bm "github.com/bilibili/kratos/pkg/net/http/blademaster"
	"github.com/bilibili/kratos/pkg/net/http/blademaster/binding"
)

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathImCoreConnect = "/imCore.service.v1.imCore/Connect"

// ImCoreBMServer is the server API for ImCore service.
type ImCoreBMServer interface {
	Connect(ctx context.Context, req *ConnectReq) (resp *ConnectResp, err error)
}

var ImCoreSvc ImCoreBMServer

func imCoreConnect(c *bm.Context) {
	p := new(ConnectReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := ImCoreSvc.Connect(c, p)
	c.JSON(resp, err)
}

// RegisterImCoreBMServer Register the blademaster route
func RegisterImCoreBMServer(e *bm.Engine, server ImCoreBMServer, midMap map[string]bm.HandlerFunc) {
	ImCoreSvc = server
	e.GET("/imCore.service.v1.imCore/Connect", imCoreConnect)
}
