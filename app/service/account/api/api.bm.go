// Code generated by protoc-config-bm v0.1, DO NOT EDIT.
// source: api.proto

/*
Package api is a generated blademaster stub package.
This code was generated with kratos/tool/protobuf/protoc-config-bm v0.1.

package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

It is generated from these files:
	api.proto
*/
package api

import (
	"context"

	bm "github.com/bilibili/kratos/pkg/net/http/blademaster"
	"github.com/bilibili/kratos/pkg/net/http/blademaster/binding"
)
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathAccountPing = "/account.service.v1.Account/Ping"
var PathAccountRegister = "/account/register"
var PathAccountAuth = "/account/auth"

// AccountBMServer is the server API for Account service.
type AccountBMServer interface {
	Ping(ctx context.Context, req *google_protobuf1.Empty) (resp *google_protobuf1.Empty, err error)

	Register(ctx context.Context, req *RegisterReq) (resp *RegisterResp, err error)

	Auth(ctx context.Context, req *AuthReq) (resp *AuthResp, err error)
}

var AccountSvc AccountBMServer

func accountPing(c *bm.Context) {
	p := new(google_protobuf1.Empty)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := AccountSvc.Ping(c, p)
	c.JSON(resp, err)
}

func accountRegister(c *bm.Context) {
	p := new(RegisterReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := AccountSvc.Register(c, p)
	c.JSON(resp, err)
}

func accountAuth(c *bm.Context) {
	p := new(AuthReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := AccountSvc.Auth(c, p)
	c.JSON(resp, err)
}

// RegisterAccountBMServer Register the blademaster route
func RegisterAccountBMServer(e *bm.Engine, server AccountBMServer) {
	AccountSvc = server
	e.GET("/account.service.v1.Account/Ping", accountPing)
	e.POST("/account/register", accountRegister)
	e.GET("/account/auth", accountAuth)
}
