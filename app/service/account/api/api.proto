// 定义项目 API 的 proto 文件 可以同时描述 gRPC 和 HTTP API
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/api/annotations.proto";

package account.service.v1;


option go_package = "api";
option (gogoproto.goproto_getters_all) = false;

enum AccountErrCode{
  OK = 0;
  AccountNotExist = 10000;
  AccountEmailRepeated = 10001;
}

message RegisterReq {
  string email = 1 [(gogoproto.moretags) = 'validate:"required,email" json:"email"'];
  string password = 2 [(gogoproto.moretags) = 'validate:"required" json:"password"'];
}

message RegisterResp {
  int64 uid = 1 [(gogoproto.moretags) = 'json:"uid"'];
}

message AuthReq{
  string email = 1 [(gogoproto.moretags) = 'validate:"required" form:"email"'];
  //  string password = 2 [(gogoproto.moretags) = 'validate:"required"'];
}

message AuthResp{
  int64 uid = 1 [(gogoproto.moretags) = 'json:"uid"'];
  string password = 2 [(gogoproto.moretags) = 'json:"password"'];
}

message BasicInfoReq{
  int64 uid = 1;
}

message BasicInfo{
  string nickname = 1 [(gogoproto.moretags) = 'json:"nickname"'];
  string sign = 2 [(gogoproto.moretags) = 'json:"sign"'];
  string profilePicUrl = 3 [(gogoproto.moretags) = 'json:"profile_pic_url"'];
  string email = 4 [(gogoproto.moretags) = 'validate:"required"'];
  int64 uid = 5 [(gogoproto.moretags) = 'json:"uid"'];
}

service Account {
  rpc Register(RegisterReq) returns (RegisterResp) ;
  rpc GetAuthInfo (AuthReq) returns (AuthResp);
  rpc GetBasicInfo (BasicInfoReq) returns (BasicInfo);
}



